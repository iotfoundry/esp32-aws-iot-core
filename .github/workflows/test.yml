name: ESP32 AWS IoT Core Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v1

    - name: Install ESP32 Core
      run: |
        arduino-cli core update-index --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
        arduino-cli core install esp32:esp32

    - name: Install Dependencies
      run: |
        arduino-cli lib install "PubSubClient"
        arduino-cli lib install "ArduinoJson"

    - name: Setup Test Configuration
      run: |
        # Create test configuration files
        cp esp32-aws-iot/wifi_config_template.h esp32-aws-iot/wifi_config.h
        cp esp32-aws-iot/aws_config_template.h esp32-aws-iot/aws_config.h

        # Download AWS Root CA for testing
        curl -o esp32-aws-iot/AmazonRootCA1.pem https://www.amazontrust.com/repository/AmazonRootCA1.pem

    - name: Compile Main Sketch
      run: |
        # Compile main sketch with template credentials
        arduino-cli compile --fqbn esp32:esp32:esp32c3 esp32-aws-iot

    - name: Run Static Analysis
      run: |
        # Security and Configuration Checks
        echo "🔍 Running security and configuration checks..."

        # Check for hardcoded credentials in main file
        echo "Checking for hardcoded credentials in main file..."
        if grep -E "(WIFI_SSID|WIFI_PASSWORD|AWS_IOT_ENDPOINT|AWS_CERT_|THING_NAME).*=" esp32-aws-iot/esp32-aws-iot.ino | grep -v "//"; then
          echo "❌ Hardcoded credentials found in main file"
          echo "   Move credentials to separate config files"
          exit 1
        else
          echo "✅ No hardcoded credentials in main file"
        fi

        # Check for proper configuration includes
        echo "Checking for proper configuration includes..."
        REQUIRED_INCLUDES=("wifi_config.h" "aws_config.h" "device_config.h")
        for include in "${REQUIRED_INCLUDES[@]}"; do
          if grep -q "#include \"$include\"" esp32-aws-iot/esp32-aws-iot.ino; then
            echo "✅ $include include found"
          else
            echo "❌ Missing $include include"
            exit 1
          fi
        done

        # Check for template files (should exist)
        echo "Checking for required template files..."
        REQUIRED_TEMPLATES=("wifi_config_template.h" "aws_config_template.h")
        for template in "${REQUIRED_TEMPLATES[@]}"; do
          if [ -f "esp32-aws-iot/$template" ]; then
            echo "✅ $template found"
          else
            echo "❌ Missing $template"
            exit 1
          fi
        done

        # Check for accidentally committed sensitive files
        echo "Checking for accidentally committed sensitive files..."
        if git ls-files | grep -E "(aws_config\.h|wifi_config\.h)$"; then
          echo "❌ Sensitive files are committed to git"
          echo "   These files should be gitignored"
          exit 1
        else
          echo "✅ No sensitive files committed to git"
        fi

        # Check gitignore contains sensitive files
        echo "Checking .gitignore configuration..."
        if grep -q "aws_config\.h" esp32-aws-iot/.gitignore && grep -q "wifi_config\.h" esp32-aws-iot/.gitignore; then
          echo "✅ Sensitive files properly gitignored"
        else
          echo "❌ Sensitive files not properly gitignored"
          exit 1
        fi

    - name: Test Configuration Scripts
      run: |
        echo "Testing configuration generation scripts..."

        # Test shell script syntax
        if [ -f "esp32-aws-iot/generate_aws_config.sh" ]; then
          bash -n esp32-aws-iot/generate_aws_config.sh
          echo "✅ Shell script syntax valid"
        fi

        # Test PowerShell script syntax (if pwsh is available)
        if command -v pwsh >/dev/null 2>&1 && [ -f "esp32-aws-iot/generate_aws_config.ps1" ]; then
          pwsh -NoProfile -Command "& { Get-Content esp32-aws-iot/generate_aws_config.ps1 | Out-Null }"
          echo "✅ PowerShell script syntax valid"
        fi

    - name: Test Results
      run: |
        echo "✅ Compilation successful"
        echo "✅ Static analysis passed"
        echo "✅ Configuration scripts validated"
        echo "🎉 All ESP32 AWS IoT Core tests completed successfully!"
