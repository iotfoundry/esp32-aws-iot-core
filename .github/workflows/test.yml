name: ESP32 AWS IoT Core Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v1

    - name: Install ESP32 Core
      run: |
        arduino-cli core update-index --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
        arduino-cli core install esp32:esp32

    - name: Install Dependencies
      run: |
        arduino-cli lib install "PubSubClient"
        arduino-cli lib install "ArduinoJson"

    - name: Setup Test Configuration
      run: |
        # Create test configuration files
        cp esp32-aws-iot/wifi_config_template.h esp32-aws-iot/wifi_config.h
        cp esp32-aws-iot/aws_config_template.h esp32-aws-iot/aws_config.h

        # Download AWS Root CA for testing
        curl -o esp32-aws-iot/AmazonRootCA1.pem https://www.amazontrust.com/repository/AmazonRootCA1.pem

    - name: Compile Main Sketch
      run: |
        # Compile main sketch with template credentials
        arduino-cli compile --fqbn esp32:esp32:esp32c3 esp32-aws-iot

    - name: Run Static Analysis
      run: |
        # Check for hardcoded credentials
        echo "Checking for hardcoded WiFi credentials..."
        if grep -r "const char.*WIFI_SSID.*=" esp32-aws-iot/esp32-aws-iot.ino; then
          echo "❌ Hardcoded WiFi credentials found in main file"
          exit 1
        else
          echo "✅ No hardcoded WiFi credentials in main file"
        fi

        echo "Checking for hardcoded AWS credentials..."
        if grep -r "const char.*AWS_IOT_ENDPOINT.*=" esp32-aws-iot/esp32-aws-iot.ino; then
          echo "❌ Hardcoded AWS credentials found in main file"
          exit 1
        else
          echo "✅ No hardcoded AWS credentials in main file"
        fi

        echo "Checking for proper includes..."
        if grep -q '#include "wifi_config.h"' esp32-aws-iot/esp32-aws-iot.ino; then
          echo "✅ WiFi config include found"
        else
          echo "❌ Missing WiFi config include"
          exit 1
        fi

        if grep -q '#include "aws_config.h"' esp32-aws-iot/esp32-aws-iot.ino; then
          echo "✅ AWS config include found"
        else
          echo "❌ Missing AWS config include"
          exit 1
        fi

        echo "Checking for sensitive files in repository..."
        if [ -f "esp32-aws-iot/aws_config.h" ] && grep -q "BEGIN CERTIFICATE" esp32-aws-iot/aws_config.h; then
          echo "⚠️  Warning: aws_config.h contains certificates (should be gitignored)"
        else
          echo "✅ aws_config.h properly configured"
        fi

        if [ -f "esp32-aws-iot/wifi_config.h" ] && grep -q "your_wifi_ssid" esp32-aws-iot/wifi_config.h; then
          echo "✅ wifi_config.h using template values"
        else
          echo "⚠️  Warning: wifi_config.h may contain real credentials"
        fi

    - name: Test Configuration Scripts
      run: |
        echo "Testing configuration generation scripts..."

        # Test shell script syntax
        if [ -f "esp32-aws-iot/generate_aws_config.sh" ]; then
          bash -n esp32-aws-iot/generate_aws_config.sh
          echo "✅ Shell script syntax valid"
        fi

        # Test PowerShell script syntax (if pwsh is available)
        if command -v pwsh >/dev/null 2>&1 && [ -f "esp32-aws-iot/generate_aws_config.ps1" ]; then
          pwsh -NoProfile -Command "& { Get-Content esp32-aws-iot/generate_aws_config.ps1 | Out-Null }"
          echo "✅ PowerShell script syntax valid"
        fi

    - name: Test Results
      run: |
        echo "✅ Compilation successful"
        echo "✅ Static analysis passed"
        echo "✅ Configuration scripts validated"
        echo "🎉 All ESP32 AWS IoT Core tests completed successfully!"
